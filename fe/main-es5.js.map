{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/admin/add-unit-content/add-unit-content.component.html","src/app/admin/admin.html","src/app/app.component.html","src/app/core/login/login.component.html","src/app/core/not-found/not-found.component.html","src/app/interrogator/group-selector.html","src/app/interrogator/interrogator.component.html","src/app/interrogator/show-phrases/show-phrases.component.html","node_modules/tslib/tslib.es6.js","src/app/admin/add-unit-content/add-unit-content.component.css","src/app/admin/add-unit-content/add-unit-content.component.ts","src/app/admin/admin.component.ts","src/app/admin/admin.module.ts","src/app/app.component.css","src/app/app.component.ts","src/app/app.module.ts","src/app/auth-services/auth-guard.service.ts","src/app/auth-services/authentication.service.ts","src/app/core/core-routing.module.ts","src/app/core/core.module.ts","src/app/core/login/login.component.ts","src/app/core/not-found/not-found.component.ts","src/app/interrogator/group-selector.component.ts","src/app/interrogator/guessed-word-converter.ts","src/app/interrogator/interrogator.component.css","src/app/interrogator/interrogator.component.ts","src/app/interrogator/interrogator.module.ts","src/app/interrogator/show-phrases/show-phrases.component.css","src/app/interrogator/show-phrases/show-phrases.component.ts","src/app/models/guessed-word.ts","src/app/models/phrase.ts","src/app/models/translation-to-save.ts","src/app/models/word.ts","src/app/services/word-service.ts","src/assets/css/styles.css","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<form>\\n\\n    <div *ngFor=\\\"let word of unitWords\\\" class=\\\"form-group row\\\">\\n        <div class=\\\"col-4\\\">\\n            {{toString( word.from)}}\\n        </div>\\n        <div class=\\\"col-4\\\">\\n            {{toString( word.to)}}\\n        </div>\\n        <div class=\\\"col-2\\\">\\n            <input type=\\\"button\\\" (click)=\\\"remove(word)\\\" name=\\\"remove\\\" id=\\\"remove\\\" class=\\\"btn btn-secondary\\\"\\n                value=\\\"Töröl\\\" />\\n        </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n        <div class=\\\"col-4\\\">\\n            <div *ngFor=\\\"let phrase of fromPhrases; let in=index\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"fromPhrases[in].phrase\\\" name=\\\"from{{in}}\\\" autofocus id=\\\"from{{in}}\\\"\\n                    class=\\\"form-control\\\" #name=\\\"ngModel\\\" required />\\n            </div>\\n        </div>\\n        <div class=\\\"col-4\\\">\\n            <div *ngFor=\\\"let phrase of toPhrases; let in=index\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"toPhrases[in].phrase\\\" name=\\\"to{{in}}\\\" autofocus id=\\\"to{{in}}\\\"\\n                    class=\\\"form-control\\\" #name=\\\"ngModel\\\" required />\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n        <div class=\\\"col-4\\\">\\n            <input type=\\\"button\\\" (click)=\\\"addFrom()\\\" name=\\\"addFrom\\\" id=\\\"addFrom\\\" class=\\\"btn btn-secondary\\\" value=\\\"+\\\" />\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"example\\\" name=\\\"example\\\" id=\\\"example\\\" class=\\\"form-control form-control-sm\\\" />\\n        </div>\\n        <div class=\\\"col-4\\\">\\n            <input type=\\\"button\\\" (click)=\\\"addTo()\\\" name=\\\"addTo\\\" id=\\\"addTo\\\" class=\\\"btn btn-secondary\\\" value=\\\"+\\\" />\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"translatedExample\\\" name=\\\"translatedExample\\\" id=\\\"translatedExample\\\"\\n                class=\\\"form-control form-control-sm\\\" />\\n        </div>\\n        <div class=\\\"col-2\\\">\\n            <input type=\\\"submit\\\" (click)=\\\"add()\\\" name=\\\"add\\\" id=\\\"add\\\" class=\\\"btn btn-primary\\\" value=\\\"Hozzáad\\\" />\\n        </div>\\n    </div>\\n</form>\"","export default \"<!--<div class=\\\"row\\\">\\r\\n        <div *ngFor=\\\"let group of groups\\\" style=\\\"margin-left: 5px\\\">\\r\\n          <div ngbDropdown class=\\\"d-inline-block\\\">\\r\\n            <button class=\\\"btn btn-outline-primary\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle>{{group.name}}</button>\\r\\n            <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic1\\\">\\r\\n              <button *ngFor=\\\"let subGroup of group.group\\\" class=\\\"dropdown-item\\\" (click)=\\\"interrogate(subGroup.code)\\\">{{subGroup.name}}</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n</div>-->\\r\\nAdmin\"","export default \"<group-selector></group-selector>\\r\\n<router-outlet></router-outlet>\\r\\n\"","export default \"<form class=\\\"form-signin\\\">\\r\\n  <h2>Login</h2>\\r\\n  <label for=\\\"username\\\" class=\\\"sr-only\\\">Username</label>\\r\\n  <input type=\\\"text\\\" required autofocus id=\\\"username\\\" #username placeholder=\\\"Username/Email\\\" />\\r\\n  <label for=\\\"password\\\" class=\\\"sr-only\\\">Password</label>\\r\\n  <input type=\\\"password\\\" class=\\\"form-control\\\" required autofocus id=\\\"password\\\" #password placeholder=\\\"Password\\\" />\\r\\n  <button type=\\\"button\\\" (click)=\\\"login(username.value, password.value)\\\">Login</button>\\r\\n</form>\\r\\n      \"","export default \"<p>\\r\\n  not-found works!\\r\\n</p>\\r\\n\"","export default \"<div class=\\\"row\\\">\\r\\n        <div *ngFor=\\\"let group of groups\\\" style=\\\"margin-left: 5px\\\">\\r\\n          <div ngbDropdown class=\\\"d-inline-block\\\">\\r\\n            <button class=\\\"btn btn-outline-primary\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle>{{group.name}}</button>\\r\\n            <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic1\\\">\\r\\n              <button *ngFor=\\\"let subGroup of group.group\\\" class=\\\"dropdown-item\\\" (click)=\\\"interrogate(subGroup.code)\\\">{{subGroup.name}}</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n</div>\"","export default \"<form>\\r\\n    <div *ngIf=\\\"word\\\">\\r\\n        <div>\\r\\n\\r\\n            <div style=\\\"display: flex\\\">\\r\\n                <div>{{word.from}}</div>\\r\\n                <div *ngIf=\\\"word.example\\\" style=\\\"margin-left: 5px\\\">[Példa mondat:\\r\\n                    {{word.example}}]</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col-9\\\">\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"to\\\" name=\\\"to\\\" autofocus [readonly]=\\\"checked\\\"\\r\\n                        autocomplete=\\\"off\\\" id=\\\"to\\\" class=\\\"form-control form-control-sm\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"col-3\\\">\\r\\n                    <input type=\\\"submit\\\" (click)=\\\"check()\\\" value=\\\"Ellenőrzés\\\" *ngIf=\\\"!checked\\\" class=\\\"btn btn-primary\\\">\\r\\n                    <input type=\\\"submit\\\" (click)=\\\"next()\\\" value=\\\"Tovább\\\" *ngIf=\\\"checked\\\" class=\\\"btn btn-primary\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <label *ngIf=\\\"checked && word.pronunciation\\\" class=\\\"col-form-label\\\" class=\\\"col-3\\\">\\r\\n                {{word.pronunciation}}\\r\\n            </label>\\r\\n            <ngb-alert [dismissible]=\\\"false\\\" *ngIf=\\\"checked && !wrong\\\" type=\\\"success\\\">Helyes! ({{word.to}})<div\\r\\n                    *ngIf=\\\"word.translatedExample\\\">[{{word.translatedExample}}]</div>\\r\\n            </ngb-alert>\\r\\n            <ngb-alert [dismissible]=\\\"false\\\" *ngIf=\\\"checked && wrong\\\" type=\\\"danger\\\">\\r\\n                <div>helyes válasz: {{word.to}}</div>\\r\\n                <div *ngIf=\\\"word.translatedExample\\\">[{{word.translatedExample}}]</div>\\r\\n            </ngb-alert>\\r\\n\\r\\n\\r\\n        </div>\\r\\n        <div>\\r\\n            <img *ngIf=\\\"word.imageUrl\\\" [src]=\\\"getImageUrl()\\\" />\\r\\n        </div>\\r\\n        <audio [src]=\\\"getAudio()\\\" *ngIf=\\\"word.audio\\\" id=\\\"audioplayer\\\"></audio>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"actualWords && !word\\\">\\r\\n        Gratulálunk! Sikeresen befejezted.\\r\\n        <!--<input type=\\\"button\\\" (click)=\\\"back()\\\" value=\\\"Vissza\\\">-->\\r\\n    </div>\\r\\n</form>\"","export default \"<div style=\\\"align-content: center; width: 100%;\\\">\\n    <input type=\\\"button\\\" (click)=\\\"interrogateHere()\\\" value=\\\"Kikérdez\\\" class=\\\"btn btn-secondary\\\">\\n    <input type=\\\"button\\\" (click)=\\\"interrogate()\\\" value=\\\"Kikérdez írásban\\\" class=\\\"btn btn-secondary\\\">\\n    <input type=\\\"button\\\" (click)=\\\"addNew()\\\" value=\\\"Hozzáad\\\" class=\\\"btn btn-secondary\\\">\\n    <table align=\\\"center\\\" class=\\\"table table-sm table-striped table-bordered table-hover\\\">\\n        <tbody>\\n            <tr *ngFor=\\\"let word of words; let i=index\\\" (click)=\\\"display(i)\\\">\\n                <td style=\\\"width: 50%;\\\">{{word.from}}</td>\\n                <td style=\\\"width: 50%;\\\"><span *ngIf=\\\"wordsDisplayed[i]\\\">{{word.to}}</span></td>\\n            </tr>\\n        </tbody>\\n    </table>\\n    <input type=\\\"button\\\" (click)=\\\"interrogateHere()\\\" value=\\\"Kikérdez\\\" class=\\\"btn btn-secondary\\\">\\n    <input type=\\\"button\\\" (click)=\\\"interrogate()\\\" value=\\\"Kikérdez írásban\\\" class=\\\"btn btn-secondary\\\">\\n    <input type=\\\"button\\\" (click)=\\\"addNew()\\\" value=\\\"Hozzáad\\\" class=\\\"btn btn-secondary\\\">\\n</div>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkZC11bml0LWNvbnRlbnQvYWRkLXVuaXQtY29udGVudC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Word } from 'src/app/models/word';\r\nimport { WordService } from 'src/app/services/word-service';\r\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { Phrase } from 'src/app/models/phrase';\r\nimport { Subscription } from 'rxjs';\r\nimport { TranslationToSave } from 'src/app/models/translation-to-save';\r\n\r\n@Component({\r\n  selector: 'app-add-unit-content',\r\n  templateUrl: './add-unit-content.component.html',\r\n  styleUrls: ['./add-unit-content.component.css']\r\n})\r\nexport class AddUnitContentComponent implements OnInit {\r\n\r\n  unitId: string;\r\n  unitWords: Word[];\r\n  fromPhrases: Phrase[] = [new Phrase('')];\r\n  toPhrases: Phrase[] = [new Phrase('')];\r\n  example: String;\r\n  translatedExample: String;\r\n\r\n  constructor(private wordService: WordService, private route: ActivatedRoute, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.unitWords = this.wordService.getActualWords();\r\n    if (!this.unitWords) {\r\n      this.route.paramMap.pipe(switchMap((params: ParamMap) => {\r\n        this.unitId = params.get('id');\r\n        return this.wordService.getWords(this.unitId);\r\n      })).subscribe(words => {\r\n        if (words != null) {\r\n          this.unitWords = words;\r\n        } else {\r\n          this.unitWords = new Array(0);\r\n        }\r\n      });\r\n    } else {\r\n      this.route.paramMap.pipe(switchMap((params: ParamMap) => {\r\n        return this.unitId = params.get('id');\r\n      }));\r\n    }\r\n  }\r\n\r\n  public toString(phraseArray: Phrase[]): String {\r\n    let result = \"\";\r\n    for (const phrase of phraseArray) {\r\n      result = result + \";\" + phrase.phrase;\r\n    }\r\n    result = result.substr(1);\r\n    return result;\r\n  }\r\n\r\n  addFrom() {\r\n    this.fromPhrases.push(new Phrase(''));\r\n  }\r\n\r\n  addTo() {\r\n    this.toPhrases.push(new Phrase(''));\r\n  }\r\n\r\n  add(): void {\r\n    if (!this.isPhrasesFilled(this.fromPhrases) || !this.isPhrasesFilled(this.toPhrases)) {\r\n      return;\r\n    }\r\n\r\n    let translation = new TranslationToSave(this.unitId, this.getPhraseStrings(this.fromPhrases),\r\n      this.getPhraseStrings(this.toPhrases), this.example, this.translatedExample)\r\n\r\n    this.wordService.addUnitContent(translation).then(unitContentId => {\r\n      if (unitContentId) {\r\n        let word = new Word(unitContentId, this.fromPhrases, this.toPhrases, this.example, this.translatedExample);\r\n        this.unitWords.push(word);\r\n        // clear the inputs\r\n        this.fromPhrases = [new Phrase('')];\r\n        this.toPhrases = [new Phrase('')];\r\n        this.example = '';\r\n        this.translatedExample = '';\r\n      }\r\n    });\r\n  }\r\n\r\n  remove(wordToRemove: Word): void {\r\n    this.wordService.removeUnitContent(parseInt(wordToRemove.id)).then(res => {\r\n      if (res) {\r\n        const index = this.unitWords.indexOf(wordToRemove, 0);\r\n        if (index > -1) {\r\n          this.unitWords.splice(index, 1);\r\n        }\r\n      }\r\n    });\r\n    return;\r\n  }\r\n\r\n  private getPhraseStrings(phrases: Phrase[]): String[] {\r\n    let strings: String[] = new Array();\r\n    phrases.forEach(phrase => {\r\n      strings.push(phrase.phrase);\r\n    });\r\n    return strings;\r\n  }\r\n\r\n  private isPhrasesFilled(phrases: Phrase[]): boolean {\r\n    let result = true;\r\n    phrases.forEach(phrase => {\r\n      if (phrase === undefined || phrase == null) {\r\n        result = false;\r\n        return;\r\n      } else if (phrase.phrase == undefined || phrase.phrase == null || phrase.phrase.trim() == '') {\r\n        result = false;\r\n        return;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { WordService } from '../services/word-service';\r\n\r\n\r\n@Component({\r\n    selector: 'admin',\r\n    templateUrl: './admin.html',\r\n})\r\nexport class AdminComponent {\r\n\r\n    public groups: any;\r\n\r\n    constructor(private wordService: WordService, private route: ActivatedRoute, private router: Router) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.wordService.getGroups().then(groups => this.groups = groups);\r\n    }\r\n\r\n    interrogate(key: String): void {\r\n        this.router.navigate(['/interrogator', key, 'db']);\r\n    }\r\n\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AdminComponent } from './admin.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    NgbModule\r\n  ],\r\n  declarations: [\r\n    AdminComponent\r\n  ],\r\n  exports: [\r\n    AdminComponent,\r\n    NgbModule\r\n  ],\r\n  entryComponents: [\r\n  ]\r\n})\r\nexport class AdminModule {}\r\n","export default \"main {\\r\\n  padding: 1em;\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n  text-align: center;\\r\\n  margin-top: 50px;\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0VBQ1oseUNBQXlDO0VBQ3pDLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWFpbiB7XHJcbiAgcGFkZGluZzogMWVtO1xyXG4gIGZvbnQtZmFtaWx5OiBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcbiJdfQ== */\"","import { Component } from '@angular/core';\r\nimport '../assets/css/styles.css';\r\n\r\n@Component({\r\n    selector: 'learn-english-app',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent { }\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { WordService } from './services/word-service';\r\n\r\nimport { InterrogatorModule } from './interrogator/interrogator.module';\r\nimport { AdminModule } from './admin/admin.module';\r\n\r\nimport { CoreModule } from './core/core.module';\r\nimport { ShowPhrasesComponent } from './interrogator/show-phrases/show-phrases.component';\r\nimport { AddUnitContentComponent } from './admin/add-unit-content/add-unit-content.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    InterrogatorModule,\r\n    AdminModule,\r\n    CoreModule\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    ShowPhrasesComponent,\r\n    AddUnitContentComponent\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  providers: [WordService]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { AuthenticationService } from './authentication.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthGuardService {\r\n\r\n  constructor(private authentication: AuthenticationService, private router: Router) { }\r\n\r\n  canActivate(): boolean | Promise<boolean> {\r\n\t\tlet token = this.authentication.getToken();\r\n\t\tlet accessToken = this.authentication.getAccessToken();\r\n\r\n\t\tif (!token) {\r\n\t\t\tconsole.error(\"User is not authenticated.\");\r\n\t\t\tthis.redirectToLoginPage();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse if (this.authentication.isAuthenticated()) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse {\r\n      this.authentication.refreshToken();\r\n      return true;\r\n\t\t}\r\n  }\r\n  \r\n  redirectToLoginPage() {\r\n    this.router.navigate(['/login']);\r\n}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n  token = {\r\n    refresh_token: 'refreshtokencode',\r\n    exp: new Date((new Date().getDate() +1)),\r\n    access_token: {\r\n      username: 'user',\r\n      roles: ['Admin', 'RegisteredUser', 'Super User']\r\n    }\r\n  };\r\n\r\n  tokenKey: string = \"a5smm_utoken\"\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  login(username, password) {\r\n    this.setToken(this.token);\r\n    this.router.navigate(['admin', 'dashboard']);\r\n  }\r\n\r\n  logout() {\r\n    this.removeToken();\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n  getToken() {\r\n    return JSON.parse(localStorage.getItem(this.tokenKey));\r\n  }\r\n\r\n  setToken(token) {\r\n    localStorage.setItem(this.tokenKey, JSON.stringify(token));\r\n  }\r\n\r\n  getAccessToken() {\r\n    return JSON.parse(localStorage.getItem(this.tokenKey))['access_token'];\r\n  }\r\n\r\n  isAuthenticated() {\r\n    let token = localStorage.getItem(this.tokenKey);\r\n    \r\n    if (token) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  refreshToken() {\r\n    this.token.exp = new Date((new Date().getDate() +1));\r\n    this.setToken(this.token);\r\n  }\r\n\r\n  removeToken() {\r\n    localStorage.removeItem(this.tokenKey);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { AuthGuardService } from '../auth-services/auth-guard.service';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { InterrogatorComponent } from '../interrogator/interrogator.component';\r\nimport { ShowPhrasesComponent } from '../interrogator/show-phrases/show-phrases.component';\r\nimport { AddUnitContentComponent } from '../admin/add-unit-content/add-unit-content.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'interrogator',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  /*{\r\n    path: 'admin',\r\n    canActivate: [AuthGuardService],\r\n    loadChildren: '../admin/admin.module#AdminModule'\r\n  },*/\r\n  {\r\n    path: 'admin/addUnitContent/:id',\r\n    component: AddUnitContentComponent\r\n  },  {\r\n    path: 'interrogator/show/:id',\r\n    component: ShowPhrasesComponent\r\n  },\r\n  {\r\n    path: 'interrogator/:id',\r\n    component: InterrogatorComponent\r\n  },\r\n  {\r\n    path: 'interrogator',\r\n    component: InterrogatorComponent\r\n  },\r\n  {\r\n    path: '**',\r\n    component: NotFoundComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CoreRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CoreRoutingModule } from './core-routing.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AuthenticationService } from '../auth-services/authentication.service';\r\nimport { AuthGuardService } from '../auth-services/auth-guard.service';\r\nimport { InterrogatorModule } from '../interrogator/interrogator.module';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CoreRoutingModule,\r\n    InterrogatorModule\r\n  ],\r\n  declarations: [LoginComponent, NotFoundComponent],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n  providers: [\r\n    AuthenticationService,\r\n    AuthGuardService\r\n  ]\r\n})\r\nexport class CoreModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from '../../auth-services/authentication.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html'\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(private authentication: AuthenticationService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  login(username, password) {\r\n\t\tthis.authentication.login(username, password);\r\n\t}\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html'\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { WordService } from '../services/word-service';\r\n\r\n\r\n@Component({\r\n    selector: 'group-selector',\r\n    templateUrl: './group-selector.html',\r\n})\r\nexport class GroupSelectorComponent {\r\n\r\n    public groups: any;\r\n\r\n    constructor(private wordService: WordService, private route: ActivatedRoute, private router: Router) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.wordService.getGroups().then(groups => this.groups = groups);\r\n    }\r\n\r\n    interrogate(key: String): void {\r\n        this.router.navigate(['/interrogator/show', key]);\r\n    }\r\n\r\n}\r\n","import { GuessedWord } from '../models/guessed-word';\r\nimport { Word } from '../models/word';\r\n\r\nexport class GuessedWordConverter {\r\n\r\n    constructor() { }\r\n\r\n    public convertToGuessed(words: Word[]): GuessedWord[] {\r\n        if (words == null) { return null; }\r\n        let actualWords = new Array(words.length);\r\n        let i = 0;\r\n        for (let word of words) {\r\n            actualWords[i] = this.clone(word);\r\n            i++;\r\n        }\r\n        return actualWords;\r\n    }\r\n\r\n    private clone(source: Word): GuessedWord {\r\n        let cloned = new GuessedWord();\r\n        // tslint:disable-next-line:forin\r\n        for (let prop in source) {\r\n            cloned[prop] = source[prop];\r\n        }\r\n        // convert the from and to arrays to string\r\n        cloned.from = \"\";\r\n        for (const phrase of source.from) {\r\n            cloned.from = cloned.from + \";\" + phrase.phrase;\r\n        }\r\n        cloned.from = cloned.from.substr(1);\r\n        cloned.to = new Array(source.to.length);\r\n        let i = 0;\r\n        for (const phrase of source.to) {\r\n            cloned.to[i] = phrase.phrase;\r\n            i++;\r\n        }\r\n        return cloned;\r\n    }\r\n}","export default \"main {\\r\\n  padding: 1em;\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n  text-align: center;\\r\\n  margin-top: 50px;\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW50ZXJyb2dhdG9yL2ludGVycm9nYXRvci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLHlDQUF5QztFQUN6QyxrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9pbnRlcnJvZ2F0b3IvaW50ZXJyb2dhdG9yLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYWluIHtcclxuICBwYWRkaW5nOiAxZW07XHJcbiAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIG1hcmdpbi10b3A6IDUwcHg7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuIl19 */\"","import { Component } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\n\r\nimport { WordService } from '../services/word-service';\r\nimport { GuessedWord } from '../models/guessed-word';\r\n\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { GuessedWordConverter } from './guessed-word-converter';\r\nimport { Word } from '../models/word';\r\n\r\n\r\n@Component({\r\n    selector: 'interrogator',\r\n    templateUrl: './interrogator.component.html',\r\n    styleUrls: ['./interrogator.component.css'],\r\n})\r\nexport class InterrogatorComponent {\r\n\r\n    actualWords: GuessedWord[] = null;\r\n    word: GuessedWord = null;\r\n    index: number;\r\n    to: string;\r\n    checked: boolean = false;\r\n    wrong: boolean = false;\r\n\r\n    constructor(private wordService: WordService, private route: ActivatedRoute, private router: Router) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.actualWords = new GuessedWordConverter().convertToGuessed(this.wordService.getActualWords());\r\n        if (this.actualWords) {\r\n            this.next();\r\n        } else {\r\n            this.route.paramMap\r\n                .pipe(switchMap((params: ParamMap) => {\r\n                    let unitId = params.get('id');\r\n                    if (unitId) {\r\n                        return this.wordService.getWords(params.get('id'));\r\n                    } else {\r\n                        return new Promise<Word[]>((resolve) => { resolve(); });\r\n                    }\r\n                })).subscribe(words => {\r\n                    if (words) {\r\n                        this.actualWords = new GuessedWordConverter().convertToGuessed(words);\r\n                        this.next();\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    check(): void {\r\n        if (this.isEqual(this.word.to, this.to)) {\r\n            // if this is the last or the last answer was not wrong, then remove from the array\r\n            if (!this.word.lastAnswerWrong || this.actualWords.length === 1) {\r\n                this.actualWords.splice(this.index, 1);\r\n            }\r\n            this.word.incrementCorrectAnswer();\r\n        } else {\r\n            this.word.incrementWrongAnswer();\r\n            this.wrong = true;\r\n        }\r\n        this.checked = true;\r\n        // play the audio if available\r\n        if (this.word.audio) {\r\n            let player: any = document.getElementById('audioplayer');\r\n            player.play();\r\n        }\r\n    }\r\n\r\n    private isEqual(expectedArray: String[], actual: String): boolean {\r\n        if (actual === null) { return false; }\r\n        for (let expected of expectedArray) {\r\n            if (expected === actual) { return true; }\r\n            let expectedModified = expected.toUpperCase();\r\n            let actualModified = actual.toUpperCase();\r\n            if (expectedModified === actualModified) { return true; }\r\n\r\n            expectedModified = this.replaceAbbreviation(expectedModified);\r\n            actualModified = this.replaceAbbreviation(actualModified);\r\n            if (expectedModified === actualModified) { return true; }\r\n\r\n            expectedModified = this.removeUnnecessaryCharacters(expectedModified);\r\n            actualModified = this.removeUnnecessaryCharacters(actualModified);\r\n            if (expectedModified === actualModified) { return true; }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    replaceAbbreviation(source: String) {\r\n        let result = this.replace(source, 'WHAT\\'S', 'WHAT IS');\r\n        result = this.replace(source, 'I\\'M', 'I AM');\r\n        // result = this.replace(source, 'I\\'M', 'I AM');\r\n        return result;\r\n    }\r\n\r\n    private replace(source: String, search: any, replace: string): string {\r\n        return source.replace(new RegExp(search, 'g'), replace);\r\n    }\r\n\r\n    private removeUnnecessaryCharacters(text: any): string {\r\n        let result = '';\r\n        for (let char of text) {\r\n            switch (char) {\r\n                case '?':\r\n                case '.':\r\n                case '!':\r\n                case ':':\r\n                case ',':\r\n                case ';':\r\n                case ' ':\r\n                    break;\r\n                default:\r\n                    result = result + char;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    next(): void {\r\n        this.word = this.getRandomWord(this.word && this.word.lastAnswerWrong);\r\n        this.checked = false;\r\n        this.wrong = false;\r\n        this.to = null;\r\n        if (this.word != null && document.getElementById('to') != null) {\r\n            document.getElementById('to').focus();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param checkSameIndex true, if must not get the same word as it was answered now\r\n     */\r\n    getRandomWord(checkSameIndex: boolean): GuessedWord {\r\n        let remainingWordsNumber = this.actualWords != null ? this.actualWords.length : 0;\r\n        // if no more words, then return null\r\n        if (remainingWordsNumber === 0) {\r\n            return null;\r\n        } else {\r\n            let tempIndex: number = this.getRandomIndex(remainingWordsNumber);\r\n            // if this is the last, then no need to get new random number\r\n            if (checkSameIndex && remainingWordsNumber > 1) {\r\n                while (this.index === tempIndex) {\r\n                    tempIndex = this.getRandomIndex(remainingWordsNumber);\r\n                }\r\n            }\r\n            this.index = tempIndex;\r\n            return this.actualWords[this.index];\r\n        }\r\n    }\r\n\r\n    getRandomIndex(length: number): number {\r\n        return Math.floor(Math.random() * length);\r\n    }\r\n\r\n    getImageUrl() {\r\n        return //require('../../assets/images/' + this.word.imageUrl);\r\n    }\r\n\r\n    getAudio() {\r\n        return //require('../../assets/audios/' + this.word.audio);\r\n    }\r\n\r\n    back(): void {\r\n        this.router.navigate(['']);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { InterrogatorComponent } from './interrogator.component';\r\nimport { GroupSelectorComponent } from './group-selector.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    NgbModule\r\n  ],\r\n  declarations: [\r\n    InterrogatorComponent,\r\n    GroupSelectorComponent\r\n  ],\r\n  exports: [\r\n    InterrogatorComponent,\r\n    GroupSelectorComponent,\r\n    NgbModule\r\n  ],\r\n  entryComponents: [\r\n  ]\r\n})\r\nexport class InterrogatorModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ludGVycm9nYXRvci9zaG93LXBocmFzZXMvc2hvdy1waHJhc2VzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { GuessedWord } from 'src/app/models/guessed-word';\nimport { WordService } from 'src/app/services/word-service';\nimport { GuessedWordConverter } from '../guessed-word-converter';\n\n@Component({\n  selector: 'app-show-phrases',\n  templateUrl: './show-phrases.component.html',\n  styleUrls: ['./show-phrases.component.css']\n})\nexport class ShowPhrasesComponent implements OnInit {\n\n  words: GuessedWord[] = null;\n  wordsDisplayed: boolean[];\n  key: string;\n\n  constructor(private wordService: WordService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      this.key = params.get('id');\n    });\n    this.route.paramMap\n      .pipe(switchMap((params: ParamMap) => {\n        return this.wordService.getWords(params.get('id'));\n      })).subscribe(words => {\n        this.words = new GuessedWordConverter().convertToGuessed(words);\n        if (this.words != null) {\n          this.wordsDisplayed = new Array(this.words.length);\n          for (let index = 0; index < this.wordsDisplayed.length; index++) {\n            this.wordsDisplayed[index] = true;\n          }\n        }\n      });\n  }\n\n  interrogate(): void {\n    this.router.navigate(['/interrogator', this.key]);\n  }\n\n  interrogateHere(): void {\n    for (let index = 0; index < this.wordsDisplayed.length; index++) {\n      this.wordsDisplayed[index] = false;\n    }\n  }\n\n  display(i: number): void {\n    this.wordsDisplayed[i] = true;\n  }\n\n  addNew(): void {\n    this.router.navigate(['/admin/addUnitContent', this.key]);\n  }\n\n}\n","export class GuessedWord {\r\n    id: Number;\r\n    from: String;\r\n    to: String[];\r\n    imageUrl?: String;\r\n    pronunciation?: String;\r\n    audio?: String;\r\n    example?: String;\r\n    translatedExample?: String;\r\n\r\n    lastAnswerWrong: boolean = false;\r\n    private wrongAnswerNumber: number = 0;\r\n    private correctAnswerNumber: number = 0;\r\n\r\n    public getWrongAnswerNumber(): number {\r\n        return this.wrongAnswerNumber;\r\n    }\r\n\r\n    public incrementWrongAnswer(): void {\r\n        this.wrongAnswerNumber++;\r\n        this.lastAnswerWrong = true;\r\n    }\r\n\r\n    public incrementCorrectAnswer(): void {\r\n        this.correctAnswerNumber++;\r\n        this.lastAnswerWrong = false;\r\n    }\r\n\r\n}\r\n","export class Phrase {\r\n    translationId?: Number;\r\n    phrase: String;\r\n\r\n    constructor(phrase: String, translationId?: Number) {\r\n        this.phrase = phrase;\r\n        this.translationId = translationId;\r\n    }\r\n\r\n}\r\n","export class TranslationToSave {\r\n    id: String;\r\n    from: String[];\r\n    to: String[];\r\n    imageUrl?: String;\r\n    pronunciation?: String;\r\n    audio?: String;\r\n    example?: String;\r\n    translatedExample?: String;\r\n\r\n    constructor(id: String, from: String[], to: String[], example?: String, translatedExample?: String) {\r\n        this.id = id;\r\n        this.from = from;  \r\n        this.to = to;\r\n        this.example = example;\r\n        this.translatedExample = translatedExample;  \r\n    }\r\n}","import { Phrase } from \"./phrase\";\r\n\r\nexport class Word {\r\n    id: string;\r\n    from: Phrase[];\r\n    to: Phrase[];\r\n    imageUrl?: String;\r\n    pronunciation?: String;\r\n    audio?: String;\r\n    example?: String;\r\n    translatedExample?: String;\r\n\r\n    constructor(id: string, from: Phrase[], to: Phrase[], example?: String, translatedExample?: String) {\r\n        this.id = id;\r\n        this.from = from;  \r\n        this.to = to;\r\n        this.example = example;\r\n        this.translatedExample = translatedExample;  \r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Word } from '../models/word';\r\nimport { TranslationToSave } from '../models/translation-to-save';\r\n\r\n@Injectable()\r\nexport class WordService {\r\n\r\n    actualPhrases: Word[];\r\n\r\n    constructor(private http: Http) { }\r\n\r\n    async getWords(key: String) {\r\n        try {\r\n            const res = await this.http.get('http://localhost:3000/words/' + key)\r\n                .toPromise();\r\n            var json = res != null ? res.json() : null;\r\n            var unit = json != null ? (json[0].content != null ? json[0].content : json[0]) : null;\r\n            this.actualPhrases = unit != null ? unit.words : null;\r\n            return this.actualPhrases;\r\n        }\r\n        catch (onrejected) {\r\n            console.error(onrejected);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getActualWords(): Word[] {\r\n        return this.actualPhrases;\r\n    }\r\n\r\n    async getGroups() {\r\n        try {\r\n            const res = await this.http.get('http://localhost:3000/word_groups').toPromise();\r\n            return res.json()[0].groups;\r\n        }\r\n        catch (onrejected) {\r\n            console.error(onrejected);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async addUnitContent(translation: TranslationToSave) {\r\n        try {\r\n            const res = await this.http.put('http://localhost:3000/word/', translation).toPromise();\r\n            return res.json().unitContentId;\r\n        }\r\n        catch (onrejected) {\r\n            console.error(onrejected);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async removeUnitContent(unitContentId: number) {\r\n        try {\r\n            let body = { unitContentId: (unitContentId) };\r\n            return await this.http.put('http://localhost:3000/word/remove', body).toPromise();\r\n        }\r\n        catch (onrejected) {\r\n            console.error(onrejected);\r\n            return null;\r\n        }\r\n    }\r\n}\r\n","export default \"body {\\r\\n    background: #D5D9DF;\\r\\n    color: #000000;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hc3NldHMvY3NzL3N0eWxlcy5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxtQkFBbUI7SUFDbkIsY0FBYztBQUNsQiIsImZpbGUiOiJzcmMvYXNzZXRzL2Nzcy9zdHlsZXMuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYm9keSB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjRDVEOURGO1xyXG4gICAgY29sb3I6ICMwMDAwMDA7XHJcbn1cclxuIl19 */\"","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}